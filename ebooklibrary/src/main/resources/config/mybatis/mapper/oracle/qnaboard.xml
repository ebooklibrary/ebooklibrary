<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.qnaboard">
	<sql id="searchWhere">
		<where>
			<if test="myWrite==null or myWrite==''">
				<if test="searchKeyword!=null and searchKeyword!=''">
					${searchCondition} 
					like '%' || #{searchKeyword} || '%'
				</if>
			</if>
			<if test="myWrite!=null and myWrite!=''">
				MEMBER_NO=#{memberNo}
			</if>
			
		</where>
	</sql>
	
		
	<select id="selectQnaAll" resultType="QnaBoardVO" 
		parameterType="MemberSearchVO">
		select *
		from
		(
		    select rownum as RNUM, QnaLIST_ALL.*
		    from
		        (select QNA_NO, TITLE, USER_NAME, REG_DATE,
					CONTENT,READ_COUNT
		        from QNA_BOARD 
		        <include refid="searchWhere"></include>
		        ORDER BY qna_no desc) QnaLIST_ALL    
		) 
		<![CDATA[
		where  RNUM> #{firstRecordIndex} 
			and RNUM<= #{firstRecordIndex}
			+ #{recordCountPerPage}
		]]>
	</select>
	
	<select id="selectTotalCount" parameterType="MemberSearchVO" resultType="int">
		select count(*) from QNA_BOARD
		<include refid="searchWhere"></include>
	</select>
	
	<insert id="insertQnaBoard" parameterType="QnaBoardVO">
      <selectKey keyProperty="no" 
      order="BEFORE" resultType="int">
        select QNA_SEQ.nextval from dual
      </selectKey>

		insert into QNA_BOARD(qna_no ,title,USER_NAME ,content,member_no)
		values(QNA_SEQ.nextval,#{title},#{userName},#{content},#{memberNo})
	</insert>
	
	<select id="selectBoardNoByMemberNo" parameterType="int" resultType="int">
		select max(qna_no)  from QNA_BOARD where MEMBER_no=#{memberNo}
	</select> 
	
	<select id="selectByNo" parameterType="int"
      resultType="QnaBoardVO">
      select * from QNA_BOARD where QNA_NO= #{qnaNo}
	</select>
	
	<update id="update_no" parameterType="QnaBoardVO">
		update QNA_BOARD
		set title=#{title}, content=#{content}
		
		where QNA_NO=#{qnaNo}
	</update>
	
	<delete id="deletebyQnaNo" parameterType="int"> 
		delete from QNA_BOARD where QNA_NO=#{qnaNo}
	</delete>
	
	
	<update id="readCountAdd" parameterType="int">
		update QNA_BOARD
		set READ_COUNT=READ_COUNT+1
		where QNA_NO=#{qnaNo}
	</update>
	
	<select id="prePage" parameterType="int" resultType="int">		
		select MAX(QNA_NO) from QNA_BOARD
		<![CDATA[
		 where QNA_NO < #{qnaNo}
		 ]]>
	</select>

   	<select id="nextPage" parameterType="int" resultType="int">
   		select MIN(QNA_NO) from QNA_BOARD
   		
   		<![CDATA[
   		 where QNA_NO > #{qnaNo}
   		 ]]>
   		 
   	</select>
   	
	<select id="maxPage" parameterType="int" resultType="int">		
		select MAX(QNA_NO) from QNA_BOARD
		
	</select>

   	<select id="minPage" parameterType="int" resultType="int">
   		select MIN(QNA_NO) from QNA_BOARD
   		
   	</select>
   	
   	<select id="selectByWriter" parameterType="string" resultType="QnaBoardVO">
   		select * from QNA_BOARD where USER_NAME=#{userName}
   		
   	</select>
   	
  	<select id="selectQnaBY" resultType="QnaBoardVO" 
		parameterType="MemberSearchVO">
		select *
		from
		(
		    select rownum as RNUM, QnaLIST_ALL.*
		    from
		        (select QNA_NO, TITLE, USER_NAME, REG_DATE,
					CONTENT,READ_COUNT
		        from QNA_BOARD 
		        where MEMBER_NO=#{memberNo}
		        ORDER BY qna_no desc) QnaLIST_ALL    
		) 
		<![CDATA[
		where  RNUM> #{firstRecordIndex} 
			and RNUM<= #{firstRecordIndex}
			+ #{recordCountPerPage}
		]]>
	</select>
	
	<select id="selectCountByMemNo" parameterType="MemberSearchVO" resultType="int">
		select count(*) from QNA_BOARD where  MEMBER_NO=#{memberNo}
		
	</select>
</mapper>
