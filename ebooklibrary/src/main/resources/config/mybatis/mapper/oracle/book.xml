<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.book">

	<sql id="searchWhere">
		<where>
			<if test="title!=null and title!=''">
				title like '%' || #{title} || '%'
			</if>
			<if test="publisher!=null and publisher!=''">
				publisher like '%' || #{publisher} || '%'
			</if>
			<if test="writer!=null and writer!=''">
				writer like '%' || #{writer} || '%'
			</if>
			<if test="genre!=null and genre!=0">
				and genre =#{genre}
			</if>
		</where>
	</sql>

	<select id="selectBoolAll" parameterType="BookSearchVO" resultType="MyBookVO">
		<!-- select * from book -->
		
		select *from
		(
		select rownum as RNUM, LIST_ALL.*
		from
		(
		select * from bookListView
		<include refid="searchWhere"></include>
		<if test="bookSort=='sales'">
				order by sales desc
		</if>
		<if test="bookSort=='publication'">
				order by publication desc
		</if>
		<if test="bookSort=='lowPrice'">
				order by price asc
		</if>
		<if test="bookSort=='highPrice'">
				order by price desc
		</if>
		) LIST_ALL
		)
	<![CDATA[
		where  RNUM> #{firstRecordIndex} 
		and RNUM<= #{firstRecordIndex}
		+ #{recordCountPerPage}
	]]>
	</select>
	
	<insert id="insertBook" parameterType="MyBookVO">
		<selectKey keyProperty="bookNo" order="BEFORE" resultType="int">
			select BOOK_SEQ.nextval from dual
	    </selectKey>
		insert into book(BOOK_NO,title,publisher,writer,publication,genre,price,summary,BOOK_FILE_NAME,COVER_FILE_NAME,BOOK_FILE_SIZE,ORI_BOOK_FILE_NAME,ORI_COVER_FILE_NAME)
		values(#{bookNo},#{title},#{publisher},#{writer},#{publication},#{genre},#{price},#{summary},#{bookFileName},#{coverFileName},#{bookFileSize},#{oriBookFileName},#{oriCoverFileName})
	</insert>
	
	<select id="selectBookByUserId" parameterType="string" resultType="map">
		SELECT M.BOOK_NO, M.RENT_START, M.RENT_END, floor(M.RENT_END-SYSDATE) AS "RENTDATE", B.BOOK_FILE_NAME, B.COVER_FILE_NAME, B.TITLE, B.PUBLISHER, B.WRITER, B.PUBLICATION, B.GENRE, B.SUMMARY
		  FROM MY_BOOKS M, BOOK B
		 WHERE M.BOOK_NO=B.BOOK_NO AND USER_ID=#{userId} and hide='N'
	</select>
	
	<select id="selectMyBookListByUserId" parameterType="BookSearchVO" resultType="map">
	select *from
		(
		select rownum as RNUM, LIST_ALL.*
		from
		(
		SELECT M.BOOK_NO, M.RENT_START, M.RENT_END, M.HIDE, floor(M.RENT_END-SYSDATE) AS "RENTDATE", B.BOOK_FILE_NAME, B.COVER_FILE_NAME, B.TITLE, B.PRICE, B.PUBLISHER, B.WRITER, B.PUBLICATION, B.GENRE, B.SUMMARY
		  FROM MY_BOOKS M, BOOK B
		 WHERE M.BOOK_NO=B.BOOK_NO AND USER_ID=#{userId}
		 <if test="searchKeyword!=null and searchKeyword!=''">
		 and title like '%' || #{searchKeyword} || '%' or writer like '%' || #{searchKeyword} || '%' or publisher like '%' || #{searchKeyword} || '%'
		 </if>
		 ) LIST_ALL
		)
		 <![CDATA[
		where RNUM> #{firstRecordIndex} 
		and RNUM<= #{firstRecordIndex}
		+ #{recordCountPerPage}
	]]>
	</select>
	
	<select id="myBookCount" parameterType="BookSearchVO" resultType="int">
		SELECT count(*)
		  FROM MY_BOOKS M, BOOK B
		 WHERE M.BOOK_NO=B.BOOK_NO AND USER_ID=#{userId}
		 <if test="searchKeyword!=null and searchKeyword!=''">
		 and title like '%' || #{searchKeyword} || '%' or writer like '%' || #{searchKeyword} || '%' or publisher like '%' || #{searchKeyword} || '%'
		 </if>
	</select>
	
	<select id="selectMyBooksByUserId" parameterType="string" resultType="MyBooksVO">
		select * from MY_BOOKS where USER_ID=#{userId}
	</select>
	
	<select id="selectBookByBookNo" parameterType="int" resultType="MyBookVO">
		select * from book where BOOK_NO=#{bookNo}
	</select>
	
	<select id="countAllBook" parameterType="BookSearchVO" resultType="int">
		select count(*) from bookListView
		<include refid="searchWhere"></include>
		<if test="bookSort=='sales'">
				order by sales desc
		</if>
		<if test="bookSort=='publication'">
				order by publication desc
		</if>
		<if test="bookSort=='lowPrice'">
				order by price asc
		</if>
		<if test="bookSort=='highPrice'">
				order by price desc
		</if>
	</select>
	
	<select id="selectBookDetail" parameterType="int" resultType="MyBookVO">
		select * from book where book_no=#{bookNo}
	</select>
	<select id="selectMyBooksByBookNo" parameterType="MyBooksVO" resultType="MyBooksVO">
		select * from MY_BOOKS where book_no=#{bookNo} and user_id=#{userId}
	</select>
	
	<!-- 
	<delete id="deleteMybook" parameterType="MyBooksVO">
		delete MY_BOOKS where USER_ID=#{userId} and book_no=#{bookNo}
	</delete>
	 -->
	
	<update id="hideMyBook" parameterType="MyBooksVO">
		update MY_BOOKS set hide='Y' where USER_ID=#{userId} and book_no=#{bookNo}
	</update>
	<update id="showMyBook" parameterType="MyBooksVO">
		update MY_BOOKS set hide='N' where USER_ID=#{userId} and book_no=#{bookNo}
	</update>
	
	
	<select id="selectCartByUserId" parameterType="String" resultType="MyBookVO">
		select title from cartview where user_id=#{userId}
	</select>
	
	<select id="flagDeleteBooks" parameterType="int" resultType="int">
		select count(*) from MY_BOOKS where book_no=#{bookNo}
	</select>
	<delete id="deleteBooks" parameterType="int">
		delete book where book_no=#{bookNo}
	</delete>
	
	<update id="bookEdit" parameterType="MyBookVO">
		update book
		   set TITLE=#{title}, PUBLISHER=#{publisher},WRITER=#{writer}, PUBLICATION=#{publication},GENRE=#{genre}, PRICE=#{price}, SALES=#{sales},BOOK_FILE_NAME=#{bookFileName}, COVER_FILE_NAME=#{coverFileName}, BOOK_FILE_SIZE=#{bookFileSize},SUMMARY=#{summary}
		   		,ORI_BOOK_FILE_NAME=#{oriBookFileName}, ORI_COVER_FILE_NAME=#{oriCoverFileName}
		   where book_no=#{bookNo}
	</update>


	
	<select id="schFromMain" parameterType="BookSearchVO" resultType="MyBookVO">
	select *from
		(
		select rownum as RNUM, LIST_ALL.*
		from
		(
		SELECT * FROM bookListView
		<if test="searchKeyword!=null and searchKeyword!=''">
 		 WHERE title like '%' || #{searchKeyword} || '%' or writer like '%' || #{searchKeyword} || '%' or publisher like '%' || #{searchKeyword} || '%'
 		</if>
		 ) LIST_ALL
		)
		 <![CDATA[
		where RNUM> #{firstRecordIndex} 
		and RNUM<= #{firstRecordIndex}
		+ #{recordCountPerPage}
	]]>
	</select>
	
	<select id="countschFromMain" parameterType="BookSearchVO" resultType="int">
		SELECT * FROM bookListView
		<if test="searchKeyword!=null and searchKeyword!=''">
 		 WHERE title like '%' || #{searchKeyword} || '%' or writer like '%' || #{searchKeyword} || '%' or publisher like '%' || #{searchKeyword} || '%'
 		</if>
	</select>
	
	
</mapper>























